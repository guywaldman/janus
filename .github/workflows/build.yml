name: Build
on:
  pull_request:
    branches: [main]
  push:
    branches: [develop]

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v1

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    strategy:
      matrix:
        # TODO: #7 Add tests for Windows & macOS.
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest]
        rust: [stable]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - uses: Swatinem/rust-cache@v1

      - name: Install and run ollama
        run: |
          curl -fsSL https://ollama.com/install.sh | sh
          systemctl is-active ollama && sudo systemctl stop ollama
          ollama serve &
          ollama pull phi3:mini
          ollama pull nomic-embed-text:latest

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Run examples
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --examples

      - name: Run doc tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --doc

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v1

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

      # - name: Run rustdoc lints
      #   uses: actions-rs/cargo@v1
      #   env:
      #     RUSTDOCFLAGS: "-D missing_docs -D rustdoc::missing_doc_code_examples"
      #   with:
      #     command: doc
      #     args: --workspace --all-features --no-deps --document-private-items
